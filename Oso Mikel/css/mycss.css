/* * {
	vertical-align: baseline;
	font-weight: inherit;
	font-family: inherit;
	font-style: inherit;
	font-size: 100%;
	border: 0 none;
	outline: 0;
	padding: 0;
    margin: 0;
} */

#contenedor-gral {
    width: 960px;
    margin: 0 auto 0 auto; /*centro la pagina completa en el viewport*/
}

#main {
    text-align: center;
}

#menu {
    display: inline-block;
    width: 90%; /*Logro llevar el boton de contacto al 10% que queda a la izquierda del menú de navegación.*/
}

#menu a {
    text-decoration:none; /*quito el subrayado de los links del menú*/
    font-size: 14px;
}

#menu li {
    display: inline-block; /*muestro los links del menú uno al lado del otro*/
    margin: 0px 30px 0px 30px;
}

#contacto {
    text-align: center;
    width: 20%;
    box-shadow: 3px 3px 0 rgb(122, 124, 128);
    background: rgb(4, 215, 243);
    line-height: 60px;
    border-radius: 16px;
    padding: 5px 10px 5px 10px;
}

#contacto a {
    text-decoration:none; /*quito el subrayado de los links del botón contacto*/
    color: white;
    font-size: 14px;
}

.box-1 {
    border-style: solid;
    border-width: 1px;
    border-color: black;
    border-radius: 10px;
    display: inline-block; /*esta propiedad es fundamental para aplicar los float en las boxes*/
    /* vertical-align: middle; logro que queden las cajas alineadas en forma vertical cuando no utilizo float. Pero si uso float no hace falta.*/
    padding: 15px;
    text-align: left;
    /* margin-left: 10px; */
}

.box-1.izq {
    float: left;
}

.box-1.cen {
    float: center; /*si cambio esta propiedad a right, el elemento no se sube al otro div, solo se mueve a la derecha pero sigue entre los otros dos div*/   
}

.box-1.der {
    float: right;
}

#grupo-boxes-1::after { /*este código normaliza el flujo para que no se flote el siguiente div a las tres cajas que queremos flotar en linea*/
    content: "";        /*no importa en que lugar del código escribamos toda esta definición, al leer la regla corrige bien las cajas y el texto*/
    clear: both;
    display: block; /*también puede ser table y parece funcionar de la misma forma*/
}

#grupo-boxes-2::after { /*este código normaliza el flujo para que no se flote el siguiente div a las tres cajas que queremos flotar en linea*/
    content: "";        /*no importa en que lugar del código escribamos toda esta definición, al leer la regla corrige bien las cajas y el texto*/
    clear: both;
    display: block; /*también puede ser table y parece funcionar de la misma forma*/
}

.box-1 a {
    vertical-align: text-bottom;
    font-size: 14px;
}

.box-1 p {
    font-size: 14px;
}

.size-1 {
    height: 250px;
    width: 29%;

}

.size-2 {
    height: 250px;
    width: 63%;
}

#main #subt-matata {
    padding-left: 380px;
    text-align: right;
}

#img-ositos {
    width: 960px;
}

#micasa {
    margin-bottom: 12px;
}

#presupuesto {
    margin-bottom: 12px;
}

.box-titulo {
    font-size: 14px;
}

.box-titulo.down {
    color: white;
    position: absolute;
    top: 70%;
    left: 30%;
    height: 50%;
    width: 50%;
    margin: -15% 0 0 -25%;
}

.box-subtitulo.down {
    color: white;
    position: absolute;
    top: 80%;
    left: 30%;
    height: 50%;
    width: 75%;
    margin: -15% 0 0 -25%;
}

#vecinos {
    position: relative; /*este atributo en el div padre hace que funcione el atributo en los hijos y se pueda dar ubicación a los mismos dentro del padre.*/
    background: url('../img/fondo-vecinos.jpg') no-repeat center; /*recordar el tema de los .. para moverme por los niveles de carpetas*/
    background-size: cover; /*extiende la foto a todo el fondo*/
    margin-bottom: 24px;
}

#visitas {
    margin-bottom: 24px;
}

.derechos {
    display: inline-block;
    width: 80.5%;
    vertical-align: middle;
}

.socialmedia ul li {
    display: inline-block;
    margin: 0px 0px 0px 15px;
}

.socialmedia {
    display: inline-block;
    vertical-align: middle;
}

